Freezing layer 'model.23.dfl.conv.weight'
[34m[1mAMP: [0mrunning Automatic Mixed Precision (AMP) checks...
[34m[1mAMP: [0mchecks passed âœ…
[34m[1mtrain: [0mScanning /data/users/mireia/MCV/C5/YOLO-KITTI-MOTS/labels/train.cache... 5419 images, 803 backgrounds, 0 corrupt: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 5419/5419 [00:00<?, ?it/s][0m
/home/mmajo/miniconda3/envs/c5-project/lib/python3.8/site-packages/albumentations/__init__.py:13: UserWarning: A new version of Albumentations is available: 2.0.5 (you have 1.4.18). Upgrade using: pip install -U albumentations. To disable automatic update checks, set the environment variable NO_ALBUMENTATIONS_UPDATE to 1.
  check_for_updates()
[34m[1malbumentations: [0mBlur(p=0.01, blur_limit=(3, 7)), MedianBlur(p=0.01, blur_limit=(3, 7)), ToGray(p=0.01, num_output_channels=3, method='weighted_average'), CLAHE(p=0.01, clip_limit=(1.0, 4.0), tile_grid_size=(8, 8))
[34m[1mval: [0mScanning /data/users/mireia/MCV/C5/YOLO-KITTI-MOTS/labels/val.cache... 2589 images, 43 backgrounds, 0 corrupt: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2589/2589 [00:00<?, ?it/s][0m
Plotting labels to runs/train_outputs/train_finetune_aug12/labels.jpg...
[34m[1moptimizer:[0m 'optimizer=auto' found, ignoring 'lr0=0.01' and 'momentum=0.937' and determining best 'optimizer', 'lr0' and 'momentum' automatically...
[34m[1moptimizer:[0m SGD(lr=0.01, momentum=0.9) with parameter groups 167 weight(decay=0.0), 174 weight(decay=0.0005), 173 bias(decay=0.0)
[34m[1mTensorBoard: [0mmodel graph visualization added âœ…
Image sizes 640 train, 640 val
Using 8 dataloader workers
Logging results to [1mruns/train_outputs/train_finetune_aug12[0m
Starting training for 500 epochs...

      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size
  0%|          | 0/339 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "train_yolov11.py", line 7, in <module>
    results = model.train(
  File "/home/mmajo/.local/lib/python3.8/site-packages/ultralytics/engine/model.py", line 810, in train
    self.trainer.train()
  File "/home/mmajo/.local/lib/python3.8/site-packages/ultralytics/engine/trainer.py", line 208, in train
    self._do_train(world_size)
  File "/home/mmajo/.local/lib/python3.8/site-packages/ultralytics/engine/trainer.py", line 381, in _do_train
    self.loss, self.loss_items = self.model(batch)
  File "/home/mmajo/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/mmajo/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mmajo/.local/lib/python3.8/site-packages/ultralytics/nn/tasks.py", line 113, in forward
    return self.loss(x, *args, **kwargs)
  File "/home/mmajo/.local/lib/python3.8/site-packages/ultralytics/nn/tasks.py", line 291, in loss
    preds = self.forward(batch["img"]) if preds is None else preds
  File "/home/mmajo/.local/lib/python3.8/site-packages/ultralytics/nn/tasks.py", line 114, in forward
    return self.predict(x, *args, **kwargs)
  File "/home/mmajo/.local/lib/python3.8/site-packages/ultralytics/nn/tasks.py", line 132, in predict
    return self._predict_once(x, profile, visualize, embed)
  File "/home/mmajo/.local/lib/python3.8/site-packages/ultralytics/nn/tasks.py", line 153, in _predict_once
    x = m(x)  # run
  File "/home/mmajo/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/mmajo/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mmajo/.local/lib/python3.8/site-packages/torch/nn/modules/upsampling.py", line 158, in forward
    return F.interpolate(input, self.size, self.scale_factor, self.mode, self.align_corners,
  File "/home/mmajo/.local/lib/python3.8/site-packages/torch/nn/functional.py", line 4050, in interpolate
    return torch._C._nn.upsample_nearest2d(input, output_size, scale_factors)
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 300.00 MiB. GPU 0 has a total capacity of 10.75 GiB of which 221.62 MiB is free. Including non-PyTorch memory, this process has 10.53 GiB memory in use. Of the allocated memory 10.07 GiB is allocated by PyTorch, and 247.22 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
